; Kommentarzeilen beginnen mit einem Semikolon
; Diese Datei kann (muß) Befehle enthalten, die die Anzeige des Hilfetextes
; steuern. Jeder Befehl beginnt mit einem # und muß auch (mit Ausnahme des
; Befehls Abschnittseinleitung ##) und muß auch mit einem # abgeschlossen
; werden. Die Länge des Befehls ist egal, groß- und Kleinschreibung ebenfalls.
;
; Folgende Befehle werden momentan unterstützt:
;  ##XXXX   Mit diesem Befehl beginnt ein Hilfethema. xxxx stellt eine
;           Zahl im Bereich von 0000 bis 9999 dar und entspricht der ID,
;           die der Prozedur HELP als Parameter übergeben wird. Das Hilfthema
;           endet mit dem nächsten Auftreten von ## oder dem Ende der Datei
;           Leerzeilen am Anfang und am Ende werden auch angezeigt. Dieser
;           Befehl MUSS genau 6 Zeichen lang sein.
;
;  #colorX#   Ändert die Textfarbe auf den Wert von x. Standardmäßig ist
;           schwarz eingestellt. Gültige Werte von x sind 0 bis 255
;           Empfohlene Werte sind:
;           000: Schwarz   001: Blue         002: Green      003: Cyan
;           004: Red       005: Magenta      006: Brown      007: LightGray
;           008: DarkGray  009: LightBlue    010: LightGreen 011: LightCyan
;           012: LightRed  013: LightMagenta 014: Yellow     015: White
;           256: default
;  #backgroundX#  Ändert die Hintergrundfarbe für die Textdarstellung. Die
;           Farbwerte sind die selben wie bei #color
;
;  #fontX#   Änter die Schriftart. Standardwert ist 01. Gültige Werte von
;           x sind:
;             01:  SmallArial
;             02:  Arial8
;          Die Schriftartwechseln innerhalb einer Zeile ist zu beachten, daß
;          die Schriften NICHT an der Grundlinie ausgerichtet werden, sondern an
;          der Textoberkannte. Aus diesem Grund sollte eine Zeile immer nur eine
;          Schriftart enthalten.
;
;  #tabX#  Setzt einen Tabulator der weite x. Damit wird die Xposition
;          auf das nächste Vielfache von x gesetzt.
;  #posX#  Setzt die Xposition auf den Wert xxx.
;
;  #aeinzugX#  Setzt den Absatzeinzug auf X Pixel. Die erste Zeile eines
;          Absatzes wird nicht mit diesem Befehl, sondern mit #eeinzug#
;          eingerückt. aeinzug wirkt erst ab der nächsten Zeile.
;  #eeinzugX#  Wie #aeinzug, nur dass jeweils die erste Zeile eines Absatzes
;          eingezogen wird. Auch #eeinzug wirkt erst ab dem nächsten Absatz.
;
;  #crt#   führt einen Zeilenwechsel (=Absatzwechsel) durch. Hat die selbe
;          Wirkung wie ein Zeilenwechsel in der Textdatei. Von #crt# gibt es
;          noch eine Variante, die zusätzlich den Zeilenabstand der nächsten
;          Zeile verändert:
;  #crtpX# Setzt den Zeilenabstand auf X Pixel mehr als ein normales #crt# dies
;          getan hat. 
;
;  #pictrnnnnnnnnXXXYYY  Lädt das Bild, das als RAW-Datei unter dem Namen
;          nnnnnnnn vorliegt (der Name MUß 8 Zeichen lang sein, als Endung
;          wird automatisch .RAW angehängt) und zeigt es an der Position
;          XXX / aktuelleYposition-YYY an.
;          Es ist zu beachten, daß der untere Rand des Bildes nicht in die
;          nächste Zeile ragt, da sonst dieser Teil überschrieben wird. Bei
;          Bildern, die höher als die Zeilenhöhe sind, muß YYY ein Wert
;          zugewiesen werden, der mindestetens BildHöhe-Zeilenhöhe beträgt.
;          Sollte in der selben Zeile noch Text stehen, empfiehlt es sich, den
;          Picture-Befehl an das Ende der Zeile zu schreiben, um mögliche
;          Überschneidungen mit dem Text zu vermeiden.
;
;

##0000
This is the an example Text for
the Helpsystem. It shows #color002#
blue Text !

##0011
#font02##color004#Statistic Armies
#font01##color000#
This dialogbox informs you about the number
of units that are visible, NOT the number of armies
that exist on the map. The number is splited
into three categories: ships, tanks and planes.

There are two display modes:
#aeinzug20#
* One shows for every category the units of each player

* The other combines those players that are allied with you and those you are at war with.

##0020
;
;#font02##pos080# Oberfläche
;#font01#
;
;Der Kasten rechts oben zeigt Informationen zu den Einheiten an. (Dafür muß der Cursor natürlich auf einer Einheit draufstehen).
;Links oben das Bild, rechts daneben Name und Klasse (falls vorhanden) der Einheit sowie ganz rechts Symbole für die Erfahrung.
;Der erste grüne Balken unter der Klasse gibt an, wieviel Treibstoff die Einheit noch hat.
;Die Zahl rechts daneben gibt die übriggebliebene Bewegungsstrecke an, entweder für diese Runde, oder mit der Tankfüllung. Durch anklicken kann man's umschalten.
;Darunter der Balken gibt den Schaden an, den die Einheit hat (ganz grün = kein Schaden). Rechts daneben die Panzerung der Einheit.
;
;An der rechten Seite des Kasten kann man die Höhenstufen der Einheit ablesen,
;links sind weitere Info's zu den Waffensysteme der Einheit. Werden diese mit der Maus angeklickt, werden weitere Parameter der Waffen angezeigt.
;
;
;Der Kasten darunter enthält #color004#KEINEN#color000# Kompass. Das Teil soll vielmehr die Windrichtung anzeigen (falls gerade Wind weht).
;Die Stärke des Windes kann man auf der rechten Skala ablesen. Steht der Cursor auf einer Einheit und die Windskala verfärbt sich rot, wird es höchste Zeit, die Einheit in Sicherheit zu bringen. Denn nicht alle Einheiten (vorallem Flugzeuge und kleine Schiffe) halten jeden Wind aus.
;
;Die Bedienung des Spieles sollte eigentlich problemlos sein (und erst recht, wenn man schon BI2 gespielt hat).
;
;Die "Lämpchen" ganz unten zeigen den diplomatischen Status zu den anderen Spielern an. Ist aber im Augenblick eigentlich nicht von Interesse.
;
;
;
#font02##pos080# Keys
#font01#
The folowing function are also available by using the GUI:
#aeinzug040#
space #pos030#: movement / execute order;
e  #pos030#: end turn
r  #pos030#: start building roads, railroads, and other objects
#pos010#r  #pos040#: build road
#pos010#w  #pos040#: build railway
#pos010#p  #pos040#: build pipeline
#pos010#o  #pos040#: build powerline
p  #pos030#: repair unit
a  #pos030#: attack
s  #pos030#: ascend
d  #pos030#: descent
f  #pos030#: refuel
;#pos010#g  #pos040#: refuel via dialog 
l  #pos030#: show loading
i  #pos030#: information
m  #pos030#: put any mine
#pos010#t  #pos040#: put anti tank mine 
#pos010#p  #pos040#: put anti personal mine 
#pos010#m  #pos040#: put moored mine 
#pos010#f  #pos040#: put floating mine 
#pos010#r  #pos040#: remove mine 
b  #pos030#: put building
v  #pos030#: view map 

---------------------------

F1 #pos030#: Help
F2 #pos030#: Main Menu
F3 #pos030#: Continue Network Game
F7 #pos030#: view weapon research
1 #pos030#: toggle view of resourcs
2 #pos030#: toggle unit shading
3 #pos030#: show weapon range of unit
4 #pos030#: show movement range of unit
7 #pos030#: terrain infos
8 #pos030#: show weight of unit
9 #pos030#: write whole map to PCX-File
0 #pos030#: save screen to PCX-File
strg x #pos030#: exit program

---------------------------

These functions are mostly for developers:

r  #pos030#: rePaintDisplay; (DOS)
R  #pos030#: reinitialize and rePaintDisplay; (DOS)

. #pos030#: scroll to debug page (DOS)
, #pos030#: scroll to game page (DOS)

#aeinzug0#


##0021
#font2#Starting a PbeM game#font1#

You can find this section also in the file README.HTM
Don't let the sheer amount of text here discourage you. It really is quite easy and logical :-)


Select:
 #aeinzug50##eeinzug30#
#color1#Game / New-Single Level #color0#from the Pulldown Menu#color1#
select map
Start
#aeinzug0##eeinzug0##color0#In the Alliance-Dialogbox:#aeinzug50##eeinzug30#
- specify who is controlled by a human player ( first column )
- set their positions (second column). If several players play on the same computer only a prompt for their passwords appears, but if they are assigned to different computers you have to specify a way for transmitting the data from one computer to another (only "direct file transfer" is implemented yet).
- change the names of the players
- setup alliances if necessary
#color1#OK#color0#
 #aeinzug20##eeinzug0##color0#
If the game is played on several computers a dialog box appears where you can choose which items are checked by checksums. Checksums prevent cheating by improving your units, but they also prevent using an updated unit set during the game. I personally don't use checksums at the moment. So you can just press OK.
 #aeinzug0##eeinzug0#
The game now asks for the password of the first player. If no password is entered the next time the program will only wait for any key to be pressed.
 #aeinzug20##eeinzug0#
At this point you play your turn. So you can read the rest after you have successfully done this...
 #aeinzug20##eeinzug0#

#font2#Sending the game to the next player#font1#
 #aeinzug00##eeinzug00#
If the game is played on a single computer, ASC would just ask for the password of the next player.

;But in an email- or other multi-computer game a dialogbox appears where you have to setup a connection to the next computer. The default and only transfer method for the game is direct file transfer. 
;To #color1#set#color0# it #color1#up#color0# you have to 
Now enter or select a filename to which the game will be saved. If a % is used in the filename the current turn number will be inserted there. If you want to save to a different file after each turn this is quite handy. You will not be prompted to enter a filename after ending the following turns if the file that is going to be written does not exist. So using the % will avoid any unnecessary questions. To change the filename later you have to change it in #color1#Game / network / send parameters#color0#

##0022
#font2#Continuing a PbeM game#font1#

You will have received a file ending with #color4#.EML#color0#. Place it in your ASC directory.

In ASC select #color1#Game / Continue Network Game #color0#from the Pulldown Menu.

Select the file you received. It will probably to first file in the list.
;The only transfer method at the moment is direct file transfer which is the default. #color1#Set#color0# it #color1#up#color0# for receiving by selecting the 
;Choose a way for "receiving" the game and set it up:
;direct file transfer: choose a *.EML file to load.
;OK
;After the end of the turn follow the above instructions as if you just started the game.

After making your turn, press the #color1#end turn#color0# button.

Then enter or select a filename to which the game will be saved. If a % is used in the filename the current turn number will be inserted there. If you want to save to a different file after each turn this is quite handy. You will not be prompted to enter a filename after ending the following turns if the file that is going to be written does not exist. So using the % will avoid any unnecessary questions. To change the filename later you have to change it in #color1#Game / network / send parameters#color0#


##0030

#color004##font1#
ADVANCED STRATEGIC COMMAND
#color000##font0#
(C) 1994 - 2000 by Martin Bickel and Marc Schellenberger.

Christian Mayer created most of ASC's graphics including the ASC unit set, the game interface and several terrain.

The port to Linux was done by Tom Wilson, Simon Britnell and Martin Bickel

Alexander Schäfer originally implemented the 'small editors' and created the first version of the ASC vehicle set.

Many thanks go to Jörg Richter for giving us the source of his excellent BI2/3 map editor and enabling us to make the "Battle-Isle"-Version of ASC. 

Steffen Fröhlich created the "Battle Isle" vehicle set and several buildings.

The "Standard MKII" unit set was created by Bas Fournier

Many objects, terrain and buildings were contributed by Torsten Maekler.

The configuration file IO was written by Frank Landgraf

Advanced Strategic Command and its utility programs use code of The Independent JPEG Group .

The data compression is based on routines by Julian R Seward.

Some tutorial levels are based on Battle Isle maps by Steffen Fröhlich and Thomas Blaser.

Karel Voracek created the experience symbols. 

The logo shown on startup of the mapeditor was created by Stefan Pfeiffer.

Some icons created by Michael Lange.

Many thanks also to the numerous bug reporters, first to mention Torsten Maekler and Steffen Fröhlich.


If I forgot anybody, please email.
##0041
#font02#Resources#font01#

ASC can be played in two different 'resource modes', the 'Battle Isle Resource Mode' and the 'ASC Resource Mode'.

#font02#BI Resource Mode#font01#
The Battle Isle Resource Mode is, as the name suggests, very similar to Battle Isle: All buildings can generate resources. The material is only available in the building it was produced in, while fuel and energy are stored in one pool for all your buildings. You can connect your buildings with pipeline to enable them to share their material.

The amount of resources that is produced every turn has to be set in the map editor when designing the map and is not affected by anything else. Any building can produce any amount of resources. The maximum storage capacity is defined in the building type file (see MAKEBLD.TXT) and should usually be extremely high, to be practically infinite.


#font2#ASC Resource Mode#font1#

The ASC Resource Mode is much more complex. There is no global pool for any resource. Every transfer between buildings has to be done with pipelines.

There are several different building functions that are resource related, which are defined for the building type:
#aeinzug50#
- solar power plants
- wind power plants
- mining stations
- matter converter (was formerly called: 'conventional power plant')
#aeinzug0#
A single building must never have more than one of the above flags set!

#color1#Solar power plants#color0# produce resources without consuming any other, usually (but not necessarily) energy. The amount of produced resources is the maxplus settings of the building multiplied with a factor for the weather. This factor is 100% for clear weather, 50% for rain, 25% for heavy rain, 75% for snow and 37.5% for much snow.

#color1#Wind power plants#color0# produce resources without consuming any other, usually (but not necessarily) energy. The amount of produced resources is the maxplus settings of the building multiplied with the power of the wind. At the max wind power of 255 it produces 100% of energy.

#color1#Mining stations#color0# extract resources from the ground around their entrance, the fields one after the other. Since only material and fuel can be are stored in the ground only these can be extracted. With increasing distance from the entrance the amount of extracted resources per turn gets less and less. The bars on the left side of the mineral resources page in the buildings window shows this. The maximum distance to extract resources from is 10 fields.
Mining stations may consume other resource for their task. The resources they consume is set in the mapeditor in the #color6#max plus#color0# field as negative values. Positive values define the resources that are extracted. If a mining stations does not consume any resources it will always extract the maximum possible amount of the ground, that is the #color6#max plus#color0# value divided by the distance factor. If it does consume resources, the production rate is determined by the #color6# plus #color0#field. It must between 0 and maxplus and can be changed in the game on the mining page to reduce or increase output.
The #color6#efficiency#color0# ( = resources_stored * 1024 / extracted_resources ) is specified there also. The higher the efficiency, the less resources are extracted from the ground to produce a given output. Default value for effeciency should be 1024.
You can find some additional notes about mining stations at the end of this text.

#color1#Matter converter#color0# use some kind of resources to produce others. You can build quite a variety of different buildings. Power plants consume fuel to produce energy, a fusion power plant could use material for this. A refinery could convert material to fuel. It is also possible to produce two resources out of one, or vice versa cosume two resources to produce one.
Like in mining stations the resources that are beeing produced are defined by using positive values in the various plus fields, while resources that are consumed are identified by negative values. The #color6#maxplus#color0# field of the building type defines the upper (or lower) limits. In the mapeditor the limits for the buildings may be decreased by settings the #color6#maxplus#color0# fields there. The #color6#plus#color0# field defines the initial production rate which can be changed in the game on the appropriate page of the building window.


#font2#Notes on mining#font1#
The relative amount of resources that is still in the ground is displayed in the right graph of the "mineral resources" page in the mining station. If every field of the ring that has a given distance contains the maximum possible resources, the bars have maximum height. Since there are more fields at a far distance, the absolute amount of resources in the greater distances is usually much greater. This is indicated by the single lines which display the absolute amount of resources. Not that the bars and the lines are differently scaled.

You can search mineral resources with some units, the radius for the search is specified in the vehicle type. There are two functions a unit can have: "drill for mineral resources manually" and "search for mineral resources automatically". When designing units the manual search should only be used with ships and vehicles, while the automatic search is possible with ships, airplanes and even satellites.

At the moment we have only one unit that is capable of searching for mineral resources. This is the "surveyor" and it can only search manually.

The mining stations can see the mineral resources to and at their current mining position too.

With the pull-down menu function #color6#Global#color0# / #color6#Toggle Resource View#color0# you set whether the resources are displayed in the main display as numbers, as bars, or not. The first number or bar shows the material, the second the fuel (in the game we generally use the order energy / material / fuel ).





#font2#ASC internals#font1#
The following variables exist to describe the resource system. Unless otherwise noted they all contain fields for each of the three resources: energy, material and fuel.

#color1#building type#color0# (set by makebld):
#aeinzug25# - ASC tank: the maximum storage capacity in ASC mode
 - BI tank: the maximum storage capacity in BI mode
 - maxplus: see above explanation
 - efficiency material: only for mining stations, see above explanation
 - efficiency fuel: only for mining stations, see above explanation

#color1#building instance#color0# (set by edhex):
 - plus: only used in ASC mode
 - maxplus: only used in ASC mode
 - current storage
 - BI plus: only used in BI mode

#color1#each field on the map#color0#:
 - material
 - fuel
 - resources visible: the amount of resources that is displayed is not necessarily the amount of resources in the ground, it is the amount that was there when you checked the field the last time.

#color1#the map itself#color0#
 - energy and fuel for each player in BI resource mode
#aeinzug0#

##0050
#font02# Muliplayer Settings
#font01#
#aeinzug0##eeinzug0#
In mutliplayer games a player could potentially cheat by changing the parameters of some items in the game, for example he could increase the strength of his units.

To avoid this, checksums of some or all items can be included in a multiplayer game. 
The left large list shows the items of the selected category that are available in the game, and the right list shows the items which are protected by checksums. 
Note that only the checksums are included, not the items themselves. So every player has to have all used buildings, units etc.

There are 3 modes how the game can use the checksums:
#color1#no limit, no include#color0#
#aeinzug15##eeinzug15#The game is not limited to the items whose checksums are included. If ohter items are used, their checksums will not be included, so they are not checked in any way.
#aeinzug0##eeinzug0#
#color1#no limit, include#color0#
#aeinzug15##eeinzug15#The game is not limited to the items whose checksums are included. If ohter items are used, their checksums will be included, so the player who uses not included items first determines the parameters of these items.
#aeinzug0##eeinzug0#
#color1#limited#color0#
#aeinzug15##eeinzug15#The game is limited to the items whose checksums are included. Other items may not be used.

These settings have to be specified for EACH category!

##0060

#font02# Alliances
#font01##aeinzug0##eeinzug0#(ingame)

The alliances can be set in the lower table of the alliance dialogbox. If two players are allied, a green X is set where the row of one player and the column of the other player intersect. To change this status, you can perform two actions: you may formally declare war, by setting the status to a red dot. The other player will be informed that you declare war on him. You may attack this player in the next turn (so he can prepare for your attack), when the status icon changed to a red X.
Or you can set the status directly to a red X and sneak attack him immediately. ALL players will be notified about this.

To ally with another player set the status to a green dot. This player will get a message that informs him about your peace proposal and he may accept the peace by setting his status to a green dot too. The next time you are at the turn the alliance is set indicated by a green X.

##0061

#font02# Alliances
#font01##aeinzug0##eeinzug0#(on initialization of map)

The alliances can be set in the lower table of the alliance dialogbox. If two players are allied, a green X is set where the row of one player and the column of the other player intersect. A green eye is displayed when the players are allied and share their view. A red X indicates that they are at war.
You can toggle between these three states by clicking on the item.

If you want to setup a Play by Email Game you must assign the players to different computers.

##0901
There are 2 or more maps with the same ID and the same PrivID. 
The next level for the campaign could #color004#not#color0# be identified. 

You can continue playing this level as a normal non-campaign level. But in this case you #color4#do not#color0# have a chance to continue the campaign !

To continue the campaign, press cancel, save the #color1#campaign recovery information#color0#, correct the problem, and continue by loading the #color001#campaign recovery information#color0# again.

##0902
The next level for the campaign could #color004#not#color000# be loaded.

You can continue playing this level as a normal non-campaign level. But in this case you #color4#do not#color0# have a chance to continue the campaign !

To continue the campaign, press cancel, save the #color1#campaign recovery information#color0#, correct the problem, and continue by loading the #color001#campaign recovery information#color0# again.

##0904
#font02##pos030# Congratulations
#font01#
You achived the mission goal(s) of
this level !

##0910
You have entered an empty password. In a multiplayer game, all other players could load your move and spy out your position, read your mail, etc.

It is highly recommended to use a password if you are playing a serious multiplayer game.

However, you can use empty passwords for test games, or if your opponent is sitting right next to you and is reading this dialog as well :-)
