dnl Process this file with autoconf to produce a configure script.

AC_INIT(asc,1.99.90.46)

AM_CONFIG_HEADER(config.h)
AM_INIT_AUTOMAKE
AM_MAINTAINER_MODE


dnl AC_MSG_NOTICE("srcdir is $srcdir ")

if test -f $srcdir/source/strtmesg.cpp; then
   dnl extracting the version number from the source code
   dnl (it has to be stored there to be accessible by the windows build too)
   asc_version=`cat $srcdir/source/strtmesg.cpp | awk -F\" '/asc_release=/{print \$2}' | sed 's/ASC//g'`
   PACKAGE_VERSION=$asc_version
else
   asc_version=$PACKAGE_VERSION
fi

AC_MSG_NOTICE([ASC version is $asc_version]) 

dnl the following would be better - if it was working...
dnl Why is asc_top_srcdir not available here? Is there an alternative?
dnl asc_version=`cat $(asc_top_srcdir)/source/strtmesg.cpp | awk -F\" '/asc_release=/{print \$2}' | sed 's/ASC//g'`


AC_DISABLE_SHARED
AC_PROG_LIBTOOL
AM_PROG_LIBTOOL

dnl *************************************************************************
dnl Checks for programs.
dnl
AC_PROG_CC
AC_PROG_CXX


AdditionalIncludeDir=""

gcc296test=yes
AC_ARG_ENABLE( gcc296-detection, AS_HELP_STRING([--disable-gcc296-detection],[Do not perform gcc 2.96 detection test]), gcc296test=no )
if test "$GCC" = yes; then
   gcc_version=`gcc --version`
   if test "X$gcc296test" = "Xyes"; then
      gcc_version296=`echo $gcc_version | grep 2.96`
      if test "X$gcc_version296" != "X"; then
         AC_MSG_ERROR(
              [[ GCC $gcc_version detected. This version of gcc is not an official release ]
               [ and does produce incorrect code. You may try to build ASC, but it will]
               [ most likely NOT run.]
               [ To build ASC, we recommend GCC 3.2 ; GCC 2.95 is still supported too.]
               [ You can bypass this test with --disable-gcc296-detection, so you can build ]
               [ ASC and see for yourself. And perhaps even rewrite some parts of ASC to ]
               [ make them Redhat compatible ;) ]])
      fi

      gcc_version29=`echo $gcc_version | grep 2.9`
      if test "X$gcc_version29" != "X"; then
         AC_MSG_WARN(
              [[ GCC $gcc_version detected. GCC 2.95 is currently still supported, but we ]
               [are planning to drop support for GCC 2.x in the medium term.  ]])
      fi
   fi
fi



AC_SUBST(abs_top_srcdir)
AC_SUBST(abs_top_builddir)
AC_SUBST(top_builddir)
AC_SUBST(top_srcdir)

AC_LANG_SAVE
AC_LANG_CPLUSPLUS
AC_CHECK_HEADERS( bitset,, 
              AC_MSG_ERROR( 
               [[ Header <bitset> not found. This is probably caused by having an outdated ] 
                [ C++ compiler / standard library. Please upgrade to a compiler that is ]
                [ ISO/IEC 14882 conformant (for example gcc 3.2) ]]))
AC_LANG_RESTORE


CFLAGS="$CFLAGS -D_UNIX_ -D_SDL_ "
CXXFLAGS="$CXXFLAGS -Wno-sign-compare -funsigned-char -D_UNIX_ -D_SDL_ "




dnl here comes the special stuff - done on demand (developers only?)
AC_ARG_ENABLE( docbook2man, AS_HELP_STRING([--enable-docbook2man],[will build the man pages from the sgml source files]), SGML2MAN=manpages )
AC_SUBST([SGML2MAN])
if test "X$SGML2MAN" = "Xmanpages"; then
   AC_CHECK_PROGS(DOCBOOK2MAN, docbook-to-man docbook2man )
fi
AC_SUBST(DOCBOOK2MAN)

dnl mikem: sure this is one is only interesting for martin bickel ;)
AC_ARG_ENABLE( genparse, AS_HELP_STRING([--enable-genparse],[enables recreation of the command line parsers]), ENABLEGENPARSE=1 )
if test "X$ENABLEGENPARSE" = "X1"; then
   AC_CHECK_PROG(GENCLL,genparse,genparse)
   if test "X$GENCLL" = "Xgenparse"; then
      GENCL=clparser
   fi
   AC_SUBST([GENCL])
fi

dnl *************************************************************************
dnl Checks for libraries.
dnl

dnl should be done by SDL
dnl AC_CHECK_LIB( pthread, pthread_create )

dnl now save current FLAGS - they are modified to allow SDL test progs to
dnl be compiled correctly
SAVE_CXXFLAGS=$CXXFLAGS
SAVE_CFLAGS=$CFLAGS
SAVE_LIBS=$LIBS


dnl check for libSDL
SDL_VERSION=1.2.2
AM_PATH_SDL($SDL_VERSION,:,
            AC_MSG_ERROR(
                 [[ *** SDL version $SDL_VERSION not found! If you have a distribution supplied ] 
                  [ SDL.RPM installed, perhaps the SDL-devel.RPM is missing. If your distribution] 
                  [ does not include the SDL library, you can get it from http://www.libsdl.org/ ]]))

dnl set up new FLAGS
CXXFLAGS="$CXXFLAGS $SDL_CFLAGS"
CFLAGS="$CFLAGS $SDL_CFLAGS"
LIBS="$LIBS $SDL_LIBS"

AC_CHECK_LIB( SDL_image, 
              IMG_LoadJPG_RW,,
              AC_MSG_ERROR(
                   [[ ASC requires the SDL_image library. If you have a distribution supplied ] 
                    [ SDL_image.RPM installed, perhaps the SDL_image-devel.RPM is missing. ] 
                    [ If your distribution does not include the SDL_image library, you can get it ] 
                    [ from http://www.libsdl.org/projects/SDL_image/ ]]))

#AC_MSG_CHECKING("SDL_image.h")
#AC_TRY_COMPILE( [#include <SDL_image.h>],[return 0;],
#	      AC_MSG_ERROR([[ 
#ASC requires the SDL_image library. If you have a distribution supplied 
#SDL_image.RPM installed, perhaps the SDL_image-devel.RPM is missing. 
#If your distribution does not include the SDL_image library, you can get it 
#from http://www.libsdl.org/projects/SDL_image/ ]]) )
#AC_MSG_RESULT("yes")


AC_CHECK_LIB(jpeg, 
             jpeg_CreateDecompress,,
             AC_MSG_ERROR(  
                  [[ ASC requires the jpeg library. This library will almost certainly be supplied ]
                   [ with your distribution. If you have it already installed, perhaps a jpeg-devel ]
                   [ package is missing. ]
                   [ If your distribution really does not include the jpeg library, you can get it ]
                   [ from http://www.ijg.org/ ]]))


AC_CHECK_LIB(SDL_mixer, 
             Mix_PlayChannelTimed,, 
             AC_MSG_ERROR( 
                  [[ ASC requires the SDL_mixer library. If you have a distribution supplied ] 
                   [ SDL_mixer.RPM installed, perhaps the SDL_mixer-devel.RPM is missing.] 
                   [ If your distribution does not include the SDL_image library, you can get it ] 
                   [ from http://www.libsdl.org/projects/SDL_mixer/ ]] ))

AC_CHECK_LIB( SDL_sound, Sound_Init,,SDLsoundmissing=y)


OLDCPPFLAGS=$CPPFLAGS

CPPFLAGS="$CPPFLAGS $SDL_CFLAGS"


AC_ARG_ENABLE( internal_SDL_sound, AS_HELP_STRING([--enable-internal_SDL_sound], [Don't use the system SDL_sound lib ]), forceinternalSDLsound=yes )
if test "x$forceinternalSDLsound" = x; then
   AC_CHECK_HEADER( SDL_sound.h,,SDLSOUNDHEADER=no )
   if test "X$SDLSOUNDHEADER" = "Xno" ; then
      CFLAGS="$CFLAGS -I/usr/local/include/SDL"
      CPPFLAGS="$CPPFLAGS -I/usr/local/include/SDL"
      
      dnl AC_CHECK_HEADER caches the result, so we must make it forget to do a new test 
      unset ac_cv_header_SDL_sound_h
      
      AC_CHECK_HEADER( SDL_sound.h,,SDLSOUNDHEADER2=no )
      if test "X$SDLSOUNDHEADER2" = "Xno" ; then
         SDLsoundmissing=y
      else
         AdditionalIncludeDir="$AdditionalIncludeDir -I/usr/local/include/SDL/"
         CFLAGS="$CFLAGS $AdditionalIncludeDir"
      fi
   fi
else
   SDLsoundmissing=y
fi
   
     
if test "X$SDLsoundmissing" = "Xy" ; then
   AC_MSG_WARN( SDL_sound not found. Using stripped down sound support, which only supports OGG ); 

   dnl Check for ogg
   XIPH_PATH_VORBIS
   if test "x$no_vorbis" = "x" ; then
      AdditionalIncludeDir="$AdditionalIncludeDir -I\$(abs_top_srcdir)/source/libs/SDL_sound "
      
      SDL_SOUND_LIB="\$(abs_top_srcdir)/source/libs/sdl_sound/libSDL_sound_int.la"
      
      SdlSoundDir=sdl_sound
      AC_SUBST(SdlSoundDir)
      
   else
      AC_MSG_ERROR( [Vorbis library not found! If you have a distribution supplied ] 
                    [vorbis package installed, perhaps the vorbis-devel.RPM is missing.]
                    [If your distribution does not provide the vorbis library, you can get it from ]
                    [ http://xiph.org/vorbis/ ]) 
   fi
else
   SDL_SOUND_LIB=-lSDL_sound
fi

AC_SUBST(SDL_SOUND_LIB)
AC_SUBST(VORBIS_LIBS)
AC_SUBST(VORBISFILE_LIBS)
AC_SUBST(VORBISENC_LIBS)
AC_SUBST(VORBIS_CFLAGS)
     
     
CPPFLAGS=$OLDCPPFLAGS
     


#AC_MSG_CHECKING("SDL_mixer.h")
#AC_TRY_COMPILE( [#include <SDL_mixer.h>],[return 0;],
#	      AC_MSG_ERROR( [[
#ASC requires the SDL_mixer library. If you have a distribution supplied 
#SDL_mixer.RPM installed, perhaps the SDL_mixer-devel.RPM is missing. 
#If your distribution does not include the SDL_mixer library, you can get it 
#from http://www.libsdl.org/projects/SDL_mixer/ ]]))
#AC_MSG_RESULT("yes")


#AC_CHECK_LIB( SDL_ttf, 
#              TTF_RenderText_Solid,, 
#	      AC_MSG_ERROR( [[
#ASC requires the SDL_ttf library. If you have a distribution supplied 
#SDL_ttf.RPM installed, perhaps the SDL_ttf-devel.RPM is missing. 
#If your distribution does not include the SDL_ttf library, you can get it 
#from http://www.libsdl.org/projects/SDL_ttf/ ]]))
#SDL_TTF_LDADD="-lSDL_ttf"
#AC_SUBST(SDL_TTF_LDADD)

#AC_MSG_CHECKING("SDL_ttf.h")
#AC_TRY_COMPILE( [#include <SDL_ttf.h>],[return 0;],
#	      AC_MSG_ERROR( [[
#ASC requires the SDL_ttf library. If you have a distribution supplied 
#SDL_ttf.RPM installed, perhaps the SDL_ttf-devel.RPM is missing. 
#If your distribution does not include the SDL_ttf library, you can get it 
#from http://www.libsdl.org/projects/SDL_ttf/ ]]))
#AC_MSG_RESULT("yes")


AC_CHECK_LIB( boost_regex, main, BOOST_LIBS="-lboost_regex", BOOSTERR=yes)

if test x$BOOSTERR = xyes ; then
  AC_CHECK_LIB( boost_regex-gcc, 
                main, 
                BOOST_LIBS="-lboost_regex-gcc", 
                AC_MSG_ERROR(
                  [[ ASC requires the Boost library. If you have a distribution supplied ]
                   [ Boost package installed, perhaps the Boost-devel package is missing. ]
                   [ If your distribution does not provide the Boost library, you can get it ]
                   [ from http://www.boost.org/ ]]))
fi


AC_SUBST(BOOST_LIBS)




dnl SigC++
PKG_CHECK_MODULES(SIGC, sigc++-1.2)

AC_SUBST(SIGC_LIBS)
AC_SUBST(SIGC_CFLAGS)





dnl ***********************************
dnl CHECKS FOR INCLUDED PARAGUI LIBRARY

ft2test=yes
AC_ARG_ENABLE(ft2test,
   AS_HELP_STRING([--disable-ft2test],[disable the freetype check]),
   ft2test=no
)

if test "$ft2test" = "yes"; then

   dnl Check for freetype2 with a reasonable fallback in case
   dnl freetype-config is missing.

   have_freetype=no
   AC_PATH_PROG(freetype_config,freetype-config,no)
   if test "$ac_cv_path_freetype_config" != "no"; then
      have_freetype=yes
      FREETYPE_CFLAGS="`$ac_cv_path_freetype_config --cflags`"
      FREETYPE_LIBS="`$ac_cv_path_freetype_config --libs`"
   else
      AC_CHECK_LIB(freetype,FT_Init_FreeType,have_freetype=yes)
      AC_CHECK_HEADER(ft2build.h,have_ft2build=yes)
      if test "$have_ft2build" != "yes"; then
         have_freetype="no"
      elif test "$have_freetype" = "yes"; then
         FREETYPE_LIBS="-lfreetype"
         ft2inc="no"
         AC_MSG_CHECKING(freetype2 include directory)
         if test -d /usr/local/include/freetype2; then
            ft2inc="/usr/local/include/freetype2"
         elif test -d /usr/include/freetype2; then
            ft2inc="/usr/include/freetype2"
         fi
         AC_MSG_RESULT($ft2inc)
         FREETYPE_CFLAGS="-I$ft2inc"
      fi
   fi

   if test x$have_freetype = xno; then
      AC_MSG_ERROR([*** Unable to find the FreeType 2 library (http://www.freetype.org/)])
   fi
fi


have_expat_lib=no
have_expat_include=no

AC_CHECK_HEADER(expat.h, [have_expat_include=yes])
if test x$have_expat_include = xno; then
   AC_MSG_ERROR(
        [*** Unable to find expat header file! (http://expat.sourceforge.net)]
        [Please install the library and header files ] )
fi

AC_CHECK_LIB(expat, XML_ParserCreate, have_expat_lib=yes)

if test x$have_expat_lib = xno; then
   AC_MSG_ERROR(
      [*** Unable to find expat xml library! (http://expat.sourceforge.net)]
      [Please install the library and header files ])
fi


EXPAT_INCLUDE=""
EXPAT_LIB="-lexpat"
EXPAT_SUBDIR=""
LIBEXPAT="-lexpat"

AC_SUBST(EXPAT_INCLUDE)
AC_SUBST(EXPAT_LIB)
AC_SUBST(EXPAT_SUBDIR)
AC_SUBST(LIBEXPAT)


dnl Check for physfs

PHYSFS_INCLUDE=""
PHYSFS_LIB="-lphysfs"
PHYSFS_SUBDIR=""
LIBPHYSFS="-lphysfs"

    have_physfs_lib=no
    have_physfs_include=no

    AC_CHECK_HEADER(physfs.h, [have_physfs_include=yes])

    if test x$have_physfs_include = xno; then
          AC_MSG_ERROR(
      [*** Unable to find PhysFS header file! (http://www.icculus.org/physfs)]
      [Please install the library and header files]
      )
    fi

    AC_CHECK_LIB(physfs, PHYSFS_init, have_physfs_lib=yes)

    if test x$have_physfs_lib = xno; then
   AC_MSG_ERROR(
       [*** Unable to find PhysFS library! (http://www.icculus.org/physfs)]
       [Please install the library and header files.]
       )
    fi

AC_CONFIG_SUBDIRS(src/physfs)

AC_SUBST(PHYSFS_INCLUDE)
AC_SUBST(PHYSFS_LIB)
AC_SUBST(PHYSFS_SUBDIR)
AC_SUBST(LIBPHYSFS)



dnl PARAGUI_CFLAGS="-I$prefix/include/paragui $SIGC_CFLAGS $STL_CFLAGS $FREETYPE_CFLAGS $SDL_CFLAGS $RTTI_FLAGS $EXTRA_FLAGS"
dnl PARAGUI_LIBS="-lparagui $SIGC_LIBS $SDL_LIBS $LIBEXPAT $FREETYPE_LIBS $EXTRA_LIBS $LIBSTDCPP"

AC_SUBST(FREETYPE_LIBS)


dnl ***********************************


AC_ARG_WITH(win32-build-path, AS_HELP_STRING([--with-win32-build-path=dir],[Path to the win32 build dir (for installer target only)]), inst_win32_build_dir="$withval", inst_win32_build_dir="")
AC_ARG_WITH(win32-DLL-path,   AS_HELP_STRING([--with-win32-DLL-path=dir],  [Path to the win32 DLL dir (for installer target only)]),   inst_win32_DLL_dir="$withval",   inst_win32_DLL_dir="")
AC_SUBST(inst_win32_build_dir)
AC_SUBST(inst_win32_DLL_dir)


dnl ***********************************


dnl restore old flags settings
CXXFLAGS="$SAVE_CXXFLAGS $FREETYPE_CFLAGS $AdditionalIncludeDir"


CFLAGS="$SAVE_CFLAGS $AdditionalIncludeDir"
LIBS="$SAVE_LIBS "


dnl libbz2 stuff (should have a versionnr about 1.0.0)
lib_bz2_static=no
dnl AC_ARG_ENABLE( libbz2-static, AS_HELP_STRING([--enable-libbz2-static],[compiles a static libbz2 into the binary of asc]), [lib_bz2_static=$enableval], [lib_bz2_usecache=yes] )
dnl AC_CHECK_LIB( bz2, BZ2_bzReadOpen, :, [checklib_bz2_static=yes] )
dnl AC_CACHE_CHECK( [for static libbz2 flag state], [ac_cv_lib_bz2_static], [ ac_cv_lib_bz2_static=$lib_bz2_static ] )

dnl ac_cv_lib_bz2_static holds cached flag state, checklib_bz2... holds check
dnl now combine them with the current flag state if needed
dnl if test "x$lib_bz2_usecache" = "xyes"; then
dnl  lib_bz2_static=$ac_cv_lib_bz2_static;
dnl else
dnl  ac_cv_lib_bz2_static=$lib_bz2_static;
dnl fi
dnl if test "x$checklib_bz2_static" = "xyes"; then
dnl   lib_bz2_static=yes;
dnl fi

dnl AC_MSG_RESULT( [making static libbz2... $lib_bz2_static] )

dnl if test "x$lib_bz2_static" = "xyes"; then
dnl   LIBBZ2=bzlib
dnl   LDADDLIBBZ2=\${top_builddir}/source/libs/bzlib/libbz2.a;
dnl else 
   LDADDLIBBZ2=-lbz2
   AC_DEFINE_UNQUOTED( USE_SYSTEM_BZ2, 1, [link against libbzip2] )
dnl fi


dnl *************************************************************************
dnl Checks for header files.
dnl


dnl Checks for some STL header files (which aren't available for gcc 2.95.3 ).
AC_CHECK_HEADERS( exception limits )

dnl Checks for other header files.
AC_HEADER_DIRENT
AC_HEADER_TIME


AC_DEFUN([AC_DEFINE_DIR], [
  prefix_NONE=
  exec_prefix_NONE=
  test "x$prefix" = xNONE && prefix_NONE=yes && prefix=$ac_default_prefix
  test "x$exec_prefix" = xNONE && exec_prefix_NONE=yes && exec_prefix=$prefix
dnl In Autoconf 2.60, ${datadir} refers to ${datarootdir}, which in turn
dnl refers to ${prefix}.  Thus we have to use `eval' twice.
  eval ac_define_dir="\"$2\""
  eval ac_define_dir="\"$ac_define_dir\""
  eval ac_define_dir="\"$ac_define_dir\""
  AC_SUBST($1, "$ac_define_dir")
  AC_DEFINE_UNQUOTED($1, "$ac_define_dir", [$3])
  test "$prefix_NONE" && prefix=NONE
  test "$exec_prefix_NONE" && exec_prefix=NONE
])

AC_DEFINE_DIR(GAME_DATADIR,$datadir/games/$PACKAGE, [The directory in which the data files are going to be installed])
dnl AC_DEFINE_UNQUOTED( GAME_DATADIR, "$game_datadir",  [The directory in which the data files are going to be installed])

dnl *************************************************************************
dnl Checks for typedefs, structures, and compiler characteristics.
dnl 
dnl We use our own AC_UNP_CHECK_TYPE macro, instead of AC_CHECK_TYPE,
dnl to #include more headers.  Our macro is defined in "aclocal.m4".
dnl
AC_C_CONST
AC_TYPE_SIZE_T
AC_HEADER_TIME

dnl *************************************************************************
dnl Checks for library functions.
AC_CHECK_FUNCS(select)
AC_CHECK_FUNCS(itoa)
AC_CHECK_FUNCS(stricmp)

dnl c++ tests
AC_LANG_CPLUSPLUS

dnl GCC 2.95.3 came with a broken standard library

AC_MSG_CHECKING("broken std::string compare")
AC_TRY_COMPILE( [#include <string>], [
      std::string s = "Hello World";
      s.compare  ( 0, 0, "Hello");
],, string_compare_broken=yes)

if test "x$string_compare_broken" = x ; then
  AC_MSG_RESULT("no")
else
  CXXFLAGS="$CXXFLAGS -D_string_compare_broken_"
  AC_MSG_RESULT("yes")
fi

AC_MSG_CHECKING("broken c_str Unicode support")
AC_TRY_COMPILE( [#include <string>], [
   std::basic_string<wchar_t> test;
   test.c_str();
],, Unicode_broken=yes)

if test "x$Unicode_broken" = x ; then
  AC_MSG_RESULT("no")
else
  CXXFLAGS="$CXXFLAGS -D_UNICODE_BROKEN_"
  AC_MSG_RESULT("yes")
fi


AC_MSG_CHECKING("broken std::vector")
AC_TRY_COMPILE( [#include <vector>], [
      std::vector<int> s;
      s.push_back(1);
      s.at(0);
],, stdvector_broken=yes)

if test "x$stdvector_broken" = x ; then
  AC_MSG_RESULT("no")
else
  CXXFLAGS="$CXXFLAGS -D_vector_at_broken_"
  AC_MSG_RESULT("yes")
fi


AC_MSG_CHECKING("distinct size_t type")
AC_COMPILE_IFELSE( [
    #include <string>
   void foo( int i ) {};
   void foo( size_t i ) {};
   void foo( unsigned int i ) {};
   void foo( bool b ) {};
   int main() {
     size_t t = 7;
     foo(t);
     return 0;
   }  
], size_t_type=distinct )

if test "x$size_t_type" = x ; then
  AC_MSG_RESULT("no")

  AC_MSG_CHECKING("size_t conversion")
  AC_COMPILE_IFELSE( [
    #include <string>
    void foo( int i ) {};
    void foo( unsigned int i ) {};
    void foo( bool b ) {};
    int main() {
       size_t t = 7;
       foo(t);
       return 0;
    }  
   ], AC_MSG_RESULT("yes"),AC_MSG_ERROR("Failed to compile size_t distinction check. Please contact bugs@asc-hq.org ")  )

else
  CXXFLAGS="$CXXFLAGS -DSIZE_T_not_identical_to_INT"
  AC_MSG_RESULT("yes")
fi

AC_CHECK_FILE( "$srcdir/source/unix/pbpedit/pbpeditor.cpp", PBPED=pbpedit )
AC_SUBST(PBPED)


dnl shell vars set by test&feature flag for libbz2
AC_SUBST(LIBBZ2)
AC_SUBST(LDADDLIBBZ2)

dnl docbook2man
AC_SUBST(DOCBOOK2MAN)

AC_SUBST(asc_version)


dnl *************************************************************************
dnl Checking and assembling the data files


dnl what gehts packed into main.con (the data container file) and in which
dnl order

MAINCONDATA="palette.pal data.version title.jpg title_mapeditor.jpg \
progress.* smalaril.fnt usablack.fnt arial8.fnt \
msystem.fnt gui.fnt guicol.fnt monogui.fnt \
height2.raw windp.raw windpfei.raw farbe.raw \
allianc.raw weapicon.raw expicons.raw hexinvi2.raw \
hexinvis.raw fg8.raw windrose.raw hexfld_a.raw \
hexfld.raw in_ach.raw in_h.raw build_ah.raw \
build_h.raw hexbuild.raw allianc2.raw iconship.raw \
icontank.raw iconplan.raw pfeil2.raw pfeil3.raw \
height.raw weapons.dat message1.txt waffen.raw \
knorein.raw compi2.raw pfeil-a0.raw mausi.raw \
gebasym2.raw netcontr.raw ammoprod.raw resorinf.raw \
windpowr.raw solarpwr.raw ammotran.raw research.raw \
pwrplant.raw bldinfo.raw mining.raw tabmark.raw \
traninfo.raw attack.raw hexfeld.raw mapbkgr.raw \
hex2oct.raw weapinfo.raw amatur.raw hxborder.raw \
leergui.raw guiremov.raw  \
hexmines.raw curshex2.raw markedfield.pcx curshex.raw \
railstations2.map *.raw *.fnt \
*.dat *.map helpsys?.txt message?.txt *.pcx lcac2.jpg \
*.gif *.asctxt *.gfx"

dnl what gehts packed into main.con (the data container file)
AC_SUBST(MAINCONDATA)

AC_CHECK_FILES( $srcdir/data/music/frontiers.ogg $srcdir/data/music/time_to_strike.ogg $srcdir/data/music/machine_wars.ogg,,missingmusic=x )
if test "x$missingmusic" != xx ; then
  MUSICDIR=music
else
  MUSICDIR=""
fi

AC_SUBST(MUSICDIR)

AC_CONFIG_FILES( [ Makefile \
       asc.spec \
       getmusic \
       doc/Makefile \
       doc/manpages/Makefile \
       doc/unitguide/Makefile \
       doc/unitguide/output/Makefile \
       source/Makefile \
       source/ai/Makefile \
       source/clparser/Makefile \
       source/docs/Makefile \
       source/docs/en/Makefile \
       source/graphics/Makefile \
       source/dialogs/Makefile \
       source/widgets/Makefile \
       source/actions/Makefile \
       source/doc/Makefile \
       source/libs/Makefile \
       source/libs/sdlmm/Makefile \
       source/libs/sdlmm/src/Makefile \
       source/libs/triangul/Makefile \
       source/libs/loki/Makefile \
       source/libs/sdl_sound/Makefile \
       source/libs/paragui/Makefile \
       source/libs/paragui/src/Makefile \
       source/libs/paragui/src/widgets/Makefile \
       source/libs/paragui/src/core/Makefile \
       source/libs/paragui/src/draw/Makefile \
       source/libs/paragui/src/font/Makefile \
       source/libs/paragui/src/themes/Makefile \
       source/libs/paragui/src/ystring/Makefile \
       source/sdl/Makefile \
       source/tools/Makefile \
       source/tools/lib/Makefile \
       source/tools/linux/Makefile \
       source/unix/Makefile \
       source/unix/mapeditor/Makefile \
       source/unix/pbpedit/Makefile \
       source/unix/asc/Makefile \
       source/win32/Makefile \
       source/win32/msvc/Makefile \
       data/Makefile \
       data/buildings/Makefile \
       data/trrobj/Makefile \
       data/trrobj2/Makefile \
       data/units/Makefile \
       data/units/MK1/Makefile \
       data/units/MK3/Makefile \
       data/dialog/Makefile \
       data/music/Makefile \
       installer/Makefile \
       installer/asc.nsi ]) 
       
AC_OUTPUT

AC_ARG_ENABLE( debug, AS_HELP_STRING([--enable-debug],[enables some debugging options and output]), ENABLEDEBUG=1 )
if test "X$ENABLEDEBUG" = "X1"; then
   CXXFLAGS="$CXXFLAGS -O0 -g3 -Wall"
   echo SDL_CFLAGS $SDL_CFLAGS
   echo SDL_LIBS $SDL_LIBS
dnl   echo SDLMM_CFLAGS $SDLMM_CXXFLAGS
dnl   echo SDLMM_LIBS $SDLMM_LIBS
   echo PARAGUI_CFLAGS $PARAGUI_CFLAGS
   echo PARAGUI_LIBS $PARAGUI_LIBS
   echo CFLAGS $CFLAGS
   echo CXXFLAGS $CXXFLAGS
   echo LIBS $LIBS
   echo LDFLAGS $LDFLAGS
   echo SIGC_CFLAGS $SIGC_CFLAGS
   echo SIGC_LIBS $SIGC_LIBS
fi

AC_SUBST(CFLAGS)
AC_SUBST(CXXFLAGS)

AC_SUBST(PARAGUI_CFLAGS)
AC_SUBST(PARAGUI_LIBS)
   
   
   
if test "x$missingmusic" == xx ; then
  AC_MSG_WARN( [ 
The music files could not be found. These are not distributed together with the 
source code because of their size. 
ASC can run without the music files being present, this message
is just to inform you about the existence of the music.

You can download the music files by calling the ./getmusic script and 
run configure again, which will properly install them.
Alternatively, you can download and install them manually anytime later.
] )
fi


AC_MSG_NOTICE( [ configure completed successfully. Now run "make" do build ASC.
If the build process fails for any reason, take a look at
http://asc-hq.sourceforge.net/browse.php?topic=linux
] )

