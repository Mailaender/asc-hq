<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN" "http://www.w3.org/TR/REC-html40/loose.dtd">
<HTML>
<HEAD>

<META NAME="Generator" CONTENT="WebWriter/2 v1.2">
<TITLE>ASC documentation: The Soruce</TITLE>

</HEAD>
<BODY bgcolor="#FFFFFF">

<CENTER>
<H1>Advanced Strategic Command</H1>
<P>documentation<P>
<H2>The Source</H2>
</CENTER>
I started writing the program and designed the basic game system in 1994 using Borland Pascal as the programming language. In 1995 I started using object orientated programming and in 1996 I converted the whole project to Watcom C/C++. We started the port to GCC and Linux in 1999. If you look at the source you will "see" this history. If I started such a project now from scratch I would design it completely different (for example a client / server design and everything much more object oriented). But we have the project as it is and are trying to improve it in that direction without rewriting it from scratch.<P>

The source code is not very well structured and documented. I always preferred writing cool new features instead of cleaning up the code :-) <BR>
We are going to improve this gradually. Don't hesitate to <A HREF="contact.htm">contact us</A> if you have any questions regarding the source code or anything else about the game.<P>


Another "historical" thing about the source code is the language (not the programming language) that was used for it. Since we did not intend to release the source code we used a mixture of German and English for variable- and function names and avoided writing comments and those that we have are mostly in German. We have now run several translation passes through the code to translate it to English. The global interfaces should be completely in English now, but several local variables may still be in German. Since we run the translation through the code by a source code wide "search and replace" there are now some comments and perhaps a few code elements that were negatively affected by it and sound quite funny.<P>

<H3>Required Tools</H3>
<H4>for building the DOS version</H4>
We are developing the project with Watcom C/C++ Version 10.6 and Version 11.0b. The later should be preferred because we make use of the binary trees from the STL to speed up the access to certain items. The project files for the Watcom IDE are included.<P>
The assembler files (with the exception of <TT>RDTSC.ASM</TT>) can not be assembled by WASM since it does not support the high level language interfaces that TASM provides. We are using TASM 3.2 and the file <TT>TSM.BAT</TT> that contains the necessary switches for it is included. But since the Assembler files are quite stable and usually do not need to be build again we also provide their assembled <TT>*.OBJ</TT> files to make the building of the project possible without having TASM.<P>

As host platform for the development we use OS/2 and as target platform (you should have already noticed that) DOS with DOS4GW as 32bit extender. It should be no problem to develop with Win9x as host platform with Watcom C/C++ except that debugging might be a bit problematic, but that's neither our not Watcom's fault (why is Microsoft too stupid to implement DPMI 1.0 ??).<P>

<H4>for building the Linux version</H4>
Well, nothing special about that. We build ASC with the standard GNU development tools. Refer to INSTALL for (generic) build instructions.


<H3>Porting ASC</H3>
Porting ASC to any platform supported by SDL should be farely easy (as long as it is 32 bit and has Intel byte order). 

</BODY>
</HTML>